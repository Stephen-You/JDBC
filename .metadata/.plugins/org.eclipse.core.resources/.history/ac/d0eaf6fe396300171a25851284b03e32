package com.customer.utils;

import java.io.IOException;
import java.lang.reflect.Method;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * 为了避免Servlet的“膨胀”，我们写一个BaseServlet。它的作用是让一个Servlet可以处
 * 理多种不同的请求。不同的请求调用Servlet的不同方法。
 * @author Yorick
 *
 */
@WebServlet("/BaseServlet")
public class BaseServlet extends HttpServlet {
	
	public void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//设置响应和接受字符集
		request.setCharacterEncoding("utf-8");
		response.setContentType("text/html;charset=utf-8");
		//获取方法名称
		String methodName = request.getParameter("method");
		// 当没用指定要调用的方法时，那么默认请求的是execute()方法。
		if(methodName==null||methodName.isEmpty()){
			throw new RuntimeException("您必须传递要调用的方法名称，通过method参数来完成！");
		}
		//通过反射,获取Method
		Class clazz = this.getClass();
		Method method = null;
		try {
			method = clazz.getMethod(methodName, HttpServletRequest.class,HttpServletResponse.class);
		} catch (Exception e) {
			//走到这里说明要找的方法不存在
			throw new RuntimeException(e.getMessage());
		}
		
		
	}

}
